
networks:
  backend:
    driver: bridge

services:
  lumi:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPOSITORY}
    container_name: lumi
    restart: always
    ports:
      - "${LOCAL_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      TZ:  Asia/Seoul
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

  mariadb:
    image: mariadb:11.8.2
    container_name: mariadb
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      TZ: Asia/Seoul
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  redis:
    image: redis:8.2.1
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    command: redis-server /usr/local/conf/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

volumes:
  db_data:
