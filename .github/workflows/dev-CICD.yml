name: dev-CICD.yml
on:
  push:
    branches: ["develop"]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean build -x test

      - name: Docker Build and Push
        run: |
          # 1. Docker Hub 로그인 (비밀번호를 stdin으로 전달하여 보안 유지)
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # 2. 도커 이미지 빌드
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_DOCKERHUB_REPOSITORY }} .

          # 3. 도커 이미지 푸시
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_DOCKERHUB_REPOSITORY }}
  deploy:
    if: github.event_name == 'push'
    needs: build # build 작업이 성공한 후에만 deploy 작업 실행
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEV_PUBLIC_IP }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.DEV_SSH_PORT }}
          debug: true
          script: |
            cd ${{ secrets.DEV_PROJECT_PATH }}
            sudo docker compose down
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_DOCKERHUB_REPOSITORY }}
            sudo docker compose up -d
            sudo docker image prune -af --filter "until=24h"

